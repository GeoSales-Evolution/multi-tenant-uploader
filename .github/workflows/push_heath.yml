name: Test validadity of built image

on: [push]

env:
   REGISTRY: ghcr.io
   DOCKER_IMAGE_NAME: ${{ github.repository }}
   URL_AUTH_SERVICE: localhost:8090/authToken


jobs:
  test-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lower case DOCKER_IMAGE_NAME
        run: echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t $REGISTRY/$DOCKER_IMAGE_NAME .

      - name: List images
        run: docker image ls

      - name: Create .env file
        run: |
          echo "URL_AUTH_SERVICE=$URL_AUTH_SERVICE" > .env

      - name: Lower case DOCKER_IMAGE_NAME
        run: echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Run Docker container
        run: |
          timeout 4s docker run -v "$(pwd)/.env:/.env" $REGISTRY/$DOCKER_IMAGE_NAME
          echo "::set-output name=exit_code::$?"

      - name: Check Docker container exit code
        run: |
          if [[ "${{ steps.run-docker.outputs.exit_code }}" -eq 124 ]]; then
            echo "The Docker container timed out."
          elif [[ "${{ steps.run-docker.outputs.exit_code }}" -ne 0 ]]; then
            echo "The Docker container encountered an error."
            exit 1
          fi
