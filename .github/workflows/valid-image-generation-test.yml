name: Test if current code can generate a valid image

on: [push]

env:
   REGISTRY: ghcr.io
   DOCKER_IMAGE_NAME: ${{ github.repository }}
   URL_AUTH_SERVICE: localhost:8090/authToken


jobs:
  test-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lower case DOCKER_IMAGE_NAME
        run: echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t $REGISTRY/$DOCKER_IMAGE_NAME .

      - name: Create .env file
        run: |
          printf "
            URL_AUTH_SERVICE=$URL_AUTH_SERVICE\n
            HOST_IP=0.0.0.0\n
            DB_NAME=${{ secrets.DB_NAME }}
            " > .env

      - name: Lower case DOCKER_IMAGE_NAME
        run: echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Docker run Mongo instance
        run: |
          ls
          cd db/mongo/
          ls
          docker build -t mongo_db_4_uploader .
          docker image ls -a
          docker run -d -p 27017:27017 --name mongo_db_4_uploader mongo_db_4_uploader
          echo "---------"
          docker ps
          echo "---------"
          wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $(lsb_release -cs)/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
          sudo apt update
          sudo apt install -y mongosh
          bash scripts/insert_data_from_file.sh scripts/exemple_file_for_inserting_2_tenant_driver
          bash scripts/4_query_collections.sh



      - name: Run Docker container
        run: |
          docker ps 
          echo "---- post docker ps2"
          (timeout 60s docker run --env-file "$(pwd)/.env" $REGISTRY/$DOCKER_IMAGE_NAME) ||
          if [ $? -eq 124 ]; then
            echo "OK, timeout error is acceptable."
          else
            exit $?
          fi
