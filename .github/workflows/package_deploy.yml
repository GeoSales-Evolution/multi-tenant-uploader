name: Deploy and Test GitHub Package

on:
  push:
    branches:
      - main

env:
   REGISTRY: ghcr.io
   DOCKER_IMAGE_NAME: ${{ github.repository }}
   URL_AUTH_SERVICE: localhost:8090/authToken


jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lower case DOCKER_IMAGE_NAME
        run: echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t $REGISTRY/$DOCKER_IMAGE_NAME .

      - name: Push Docker image to GitHub Packages
        run: docker push $REGISTRY/$DOCKER_IMAGE_NAME


  test-image-locally:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env file
        run: |
          echo "URL_AUTH_SERVICE=$URL_AUTH_SERVICE" > .env

      - name: Lower case DOCKER_IMAGE_NAME
        run: echo "DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Pull Docker image
        run: docker pull $REGISTRY/$DOCKER_IMAGE_NAME

      - name: Run Docker container
        run: docker run -v "$(pwd)/.env:/.env" $REGISTRY/$DOCKER_IMAGE_NAME
        timeout-minutes: 1
        continue-on-error: true